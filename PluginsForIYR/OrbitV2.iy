-- This is ported from CMD-X and I got the help converting it to a IYR Plugin with AI
local plrs = game:GetService("Players")
local rs = game:GetService("RunService")
local Plugin = {
  ["PluginName"] = "Orbit V2",
  ["PluginDescription"] = "Orbits a player without ever needing to walk past through them.",
  ["Commands"] = {
    ["orbitv2"] = {
      ["ListName"] = "orbitv2 [player] [characterSpeed] [partSpeed] [distance] [height]",
      ["Description"] = "Orbits a player with specified character speed, part speed, distance, and optional height.",
      ["Aliases"] = {"ov2"},
      ["Function"] = function(args, speaker)
        if #args < 4 then
          notify("Usage: orbitv2 [player] [characterSpeed] [partSpeed] [distance] [height (optional)]")
          return
        end

        local players = getPlayer(args[1], speaker)
        if #players == 0 then
          notify("Player not found")
          return
        end

        local characterSpeed = tonumber(args[2])
        local partSpeed = tonumber(args[3])
        local distance = tonumber(args[4])
        local height = args[5] and tonumber(args[5]) or 0 -- Default height to 0 if not provided

        if not characterSpeed or not partSpeed or not distance then
          notify("Invalid character speed, part speed, or distance")
          return
        end

        local target = plrs[players[1]]
        local targethrp = target.Character:FindFirstChild("HumanoidRootPart")

        if not targethrp then
          notify("Target's character does not have a root part")
          return
        end

        local part = Instance.new("Part")
        part.Transparency = 1
        part.Name = "ThePart"
        part.Size = Vector3.new(1.7, 1.7, 1.7)
        part.Massless = true
        part.CanCollide = false
        part.Parent = target.Character

        local weld = Instance.new("Weld")
        weld.Part1 = targethrp
        weld.Part0 = part
        weld.Parent = part

        local rp = Instance.new("RocketPropulsion")
        rp.Parent = speaker.Character.HumanoidRootPart
        rp.CartoonFactor = 0.6
        rp.MaxThrust = 5000
        rp.MaxSpeed = characterSpeed -- Use character speed for the propulsion
        rp.ThrustP = 5000
        rp.Name = "OrbitalDestructionPart"
        rp.Target = part
        rp:Fire()

        speaker.Character.Humanoid.PlatformStand = true

        local sine = 0
        local change = 1
        local spin = 0
        local spin2 = 0

        local orbit = rs.RenderStepped:Connect(function()
          sine = sine + change
          spin2 = spin2 + 1
          spin = spin + 1
          -- Modify the CFrame calculation to include height
          weld.C0 = CFrame.new(
            distance * math.cos(sine / partSpeed), -- X position
            height * math.sin(sine / partSpeed),   -- Y position (vertical orbit)
            distance * math.sin(sine / partSpeed)   -- Z position
          ) * CFrame.Angles(math.rad(0), math.rad(spin), math.rad(0))
        end)

        speaker.Character.Humanoid.Died:Connect(function()
          orbit:Disconnect()
        end)

        target.Character.Humanoid.Died:Connect(function()
          orbit:Disconnect()
        end)
      end
    },
    ["unorbitv2"] = {
      ["ListName"] = "unorbitv2",
      ["Description"] = "Unorbits the target and stops orbiting. Can be a failsafe",
      ["Aliases"] = {"unov2"},
      ["Function"] = function(args, speaker)
        execCmd("unorbit")
        for i, v in pairs(speaker.Character:GetDescendants()) do
          if v.Name == "OrbitalDestructionPart" or v.Name == "OrbitalDestruction" then
            v:Destroy()
          end
        end
        speaker.Character.Humanoid.PlatformStand = false
        speaker.Character.Humanoid.Sit = false
      end
    }
  }
}
return Plugin