-- its pretty obviousn this is OrbitV2 but its super sigma and you orbit a part that flies around, super cool stuff
local plrs = game:GetService("Players")
local rs = game:GetService("RunService")
local uis = game:GetService("UserInputService")

local Plugin = {
    ["PluginName"] = "Orbit V2 Custom",
    ["PluginDescription"] = "Orbits around a floating part that you can control.",
    ["Commands"] = {
        ["orbitpart"] = {
            ["ListName"] = "orbitpart [speed] [distance]",
            ["Description"] = "Creates a part and orbits around it. Control with WASD, QE for up/down",
            ["Aliases"] = {"op"},
            ["Function"] = function(args, speaker)
                if #args < 2 then
                    notify("Usage: orbitpart [speed] [distance]")
                    return
                end
                
                local speed = tonumber(args[1])
                local distance = tonumber(args[2])
                if not speed or not distance then
                    notify("Invalid speed or distance")
                    return
                end

                -- Create the control part
                local part = Instance.new("Part")
                part.Transparency = 0.5  -- Semi-transparent for visibility
                part.Name = "OrbitControl"
                part.Size = Vector3.new(2, 2, 2)
                part.Massless = true  -- Make the part weightless
                part.CanCollide = false
                part.Anchored = true  -- Anchor the part to prevent falling
                part.Position = speaker.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0)
                part.Parent = workspace

                -- Rocket propulsion setup
                local rp = Instance.new("RocketPropulsion")
                rp.Parent = speaker.Character.HumanoidRootPart
                rp.CartoonFactor = 0.6
                rp.MaxThrust = 5000
                rp.MaxSpeed = speed
                rp.ThrustP = 5000
                rp.Name = "OrbitalDestructionPart"
                rp.Target = part
                rp:Fire()

                speaker.Character.Humanoid.PlatformStand = true

                local sine = 0
                local change = 1
                local spin = 0
                local movementSpeed = 0.5

                -- Part movement control
                local function handleMovement()
                    local moveDirection = Vector3.new(0, 0, 0)
                    
                    if uis:IsKeyDown(Enum.KeyCode.W) then
                        moveDirection = moveDirection + workspace.CurrentCamera.CFrame.LookVector * movementSpeed
                    end
                    if uis:IsKeyDown(Enum.KeyCode.S) then
                        moveDirection = moveDirection - workspace.CurrentCamera.CFrame.LookVector * movementSpeed
                    end
                    if uis:IsKeyDown(Enum.KeyCode.A) then
                        moveDirection = moveDirection - workspace.CurrentCamera.CFrame.RightVector * movementSpeed
                    end
                    if uis:IsKeyDown(Enum.KeyCode.D) then
                        moveDirection = moveDirection + workspace.CurrentCamera.CFrame.RightVector * movementSpeed
                    end
                    if uis:IsKeyDown(Enum.KeyCode.Q) then
                        moveDirection = moveDirection + Vector3.new(0, movementSpeed, 0)
                    end
                    if uis:IsKeyDown(Enum.KeyCode.E) then
                        moveDirection = moveDirection - Vector3.new(0, movementSpeed, 0)
                    end

                    part.Position = part.Position + moveDirection
                end

                -- Orbit logic
                local orbit = rs.RenderStepped:Connect(function()
                    sine = sine + change
                    spin = spin + 1
                    handleMovement()
                end)

                -- Cleanup on character death
                speaker.Character.Humanoid.Died:Connect(function()
                    orbit:Disconnect()
                    part:Destroy()
                end)

                -- Store the part reference for cleanup
                _G.OrbitControlPart = part
            end
        },
        ["unorbitpart"] = {
            ["ListName"] = "unorbitpart",
            ["Description"] = "Stops orbiting and removes the control part",
            ["Aliases"] = {"unop"},
            ["Function"] = function(args, speaker)
                if _G.OrbitControlPart then
                    _G.OrbitControlPart:Destroy()
                    _G.OrbitControlPart = nil
                end
                
                for i, v in pairs(speaker.Character:GetDescendants()) do
                    if v.Name == "OrbitalDestructionPart" or v.Name == "OrbitalDestruction" then
                        v:Destroy()
                    end
                end
                
                speaker.Character.Humanoid.PlatformStand = false
                speaker.Character.Humanoid.Sit = false
            end
        }
    }
}

return Plugin