local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local CONFIG = {
    voidSafetyMargin = 50,           -- Height above void line
    platformSize = Vector3.new(20, 1, 20),  -- Size of safety platform
    platformColor = Color3.fromRGB(100, 100, 100),  -- Platform color
    followUpdateFrequency = 0.05,    -- How often platform updates position
    platformTransparency = 0.7,      -- Transparency of the platform
    enableLogging = true
}

local AntiVoidState = {
    originalDestroyHeight = Workspace.FallenPartsDestroyHeight,
    isProtectionActive = false,
    safetyPlatform = nil,
    protectionConnections = {}
}

local function Log(message)
    if CONFIG.enableLogging then
        print("[Dynamic Platform] " .. message)
    end
end

local function CreateOrUpdateSafetyPlatform(player)
    local character = player.Character
    if not character then return end
    
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    -- Create platform if it doesn't exist
    if not AntiVoidState.safetyPlatform or not AntiVoidState.safetyPlatform.Parent then
        local platform = Instance.new("Part")
        platform.Size = CONFIG.platformSize
        platform.Anchored = true
        platform.CanCollide = true
        platform.Color = CONFIG.platformColor
        platform.Transparency = CONFIG.platformTransparency
        platform.Material = Enum.Material.SmoothPlastic
        
        platform.Parent = Workspace
        AntiVoidState.safetyPlatform = platform
    end
    
    -- Update platform position
    local currentPos = rootPart.Position
    local platform = AntiVoidState.safetyPlatform
    
    platform.Position = Vector3.new(
        currentPos.X, 
        AntiVoidState.originalDestroyHeight + CONFIG.voidSafetyMargin - platform.Size.Y/2, 
        currentPos.Z
    )
end

local function StartAntiVoidProtection(player)
    if AntiVoidState.isProtectionActive then return end
    AntiVoidState.isProtectionActive = true
    
    -- Platform following connection
    local platformFollower = RunService.Heartbeat:Connect(function()
        CreateOrUpdateSafetyPlatform(player)
    end)
    
    table.insert(AntiVoidState.protectionConnections, platformFollower)
    
    -- Void detection connection
    local voidDetection = RunService.Stepped:Connect(function()
        local character = player.Character
        if not character then return end
        
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if not rootPart then return end
        
        local currentPos = rootPart.Position
        local voidThreshold = AntiVoidState.originalDestroyHeight + CONFIG.voidSafetyMargin
        
        if currentPos.Y <= voidThreshold then
            -- Immediately teleport character up if it falls too low
            local safeCFrame = CFrame.new(
                rootPart.Position.X, 
                voidThreshold + 5, 
                rootPart.Position.Z
            )
            
            character:PivotTo(safeCFrame)
            rootPart.Velocity = Vector3.new(0, 0, 0)
        end
    end)
    
    table.insert(AntiVoidState.protectionConnections, voidDetection)
    
    Log("Dynamic Platform protection activated")
end

local function StopAntiVoidProtection()
    -- Disconnect all protection connections
    for _, connection in ipairs(AntiVoidState.protectionConnections) do
        connection:Disconnect()
    end
    
    -- Remove safety platform
    if AntiVoidState.safetyPlatform and AntiVoidState.safetyPlatform.Parent then
        AntiVoidState.safetyPlatform:Destroy()
    end
    
    -- Restore original destroy height
    Workspace.FallenPartsDestroyHeight = AntiVoidState.originalDestroyHeight
    
    AntiVoidState.protectionConnections = {}
    AntiVoidState.isProtectionActive = false
    
    Log("Dynamic Platform protection deactivated")
end

-- Initialize for local player
local LocalPlayer = Players.LocalPlayer
if LocalPlayer then
    StartAntiVoidProtection(LocalPlayer)
end

-- Expose functions globally for manual control
getgenv().StartAntiVoidProtection = StartAntiVoidProtection
getgenv().StopAntiVoidProtection = StopAntiVoidProtection

-- Auto-restart protection on character respawn
LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)  -- Small delay to ensure character is fully loaded
    StartAntiVoidProtection(LocalPlayer)
end)

return "Dynamic Platform Protection Initialized"
